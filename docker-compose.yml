version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 0000
      POSTGRES_DB: authdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - quiz-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  service-registry:
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    container_name: service-registry
    ports:
      - "8761:8761"
    networks:
      - quiz-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/authdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 0000
      EUREKA_CLIENT_DEFAULTZONE: http://service-registry:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    ports:
      - "8083:8083"
    networks:
      - quiz-network

  question-service:
    build:
      context: ./question-service
      dockerfile: Dockerfile
    container_name: question-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/questiondb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 0000
      EUREKA_CLIENT_DEFAULTZONE: http://service-registry:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      - quiz-network

  quiz-service:
    build:
      context: ./quiz-service
      dockerfile: Dockerfile
    container_name: quiz-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/quizdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 0000
      EUREKA_CLIENT_DEFAULTZONE: http://service-registry:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      question-service:
        condition: service_started
    ports:
      - "8082:8082"
    networks:
      - quiz-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    environment:
      EUREKA_CLIENT_DEFAULTZONE: http://service-registry:8761/eureka/
    depends_on:
      service-registry:
        condition: service_healthy
      auth-service:
        condition: service_started
      question-service:
        condition: service_started
      quiz-service:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - quiz-network

networks:
  quiz-network:
    driver: bridge

volumes:
  pgdata:
